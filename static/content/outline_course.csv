WEEK,HOURS,CONTENT,INTENDED LEARNING OUTCOMES
Week 1 & 2,8hrs,"Complexity analysis (Big-O notation, orders of growth, worst case, average case);","Be able to understand and appreciate the role of data organization and algorithmic structure. Be able to compare the efficiency of a good programming algorithm. Argue the correctness of algorithms using inductive proofs and loop invariants. Analyze worst-case running times of algorithms using asymptotic analysis. Describe the relative merits of worst-, average-, and best-case analysis. Prove the correctness and analyse the running time of the basic algorithms for those classic problems in various domains"
Week 3 ,4hrs,"Recursive data structures: Merge, Quick sort",Understand the mechanics of recursion. To implement recursive formulation of a problem structures. Understand how recursion is implemented by a computer system. Analysis of recursion.
Week 4,4hrs,"Elementary Data Structures: Lists, Stack and Queues, Priority Queues","Explain the concept of abstract data types (ADT)Understand the abstract data types; lists, stacks and queues. Analyze the performance of the implementation of the linear basic data structures. Assess how the choice of data structures and algorithm design methods impacts the performance of programs. Develop algorithms for manipulating stacks, queues, linked lists, trees, graphs. Analyze, implement, and use linked list, double-linked list, circular-linked list, and recursion on linked list"
Week 5,4hrs,"Sorting Algorithms: Bubble, Insertion selection, merge, and quick sort.","Explain the major algorithms for sorting. Recite the analyses of these algorithms and the design strategies that the algorithms embody. Synthesize algorithms that employ sorting as a sub procedure. Derive lower bounds on the running time of comparison-sorting algorithms, and explain how these bounds can be overcome."
Week 6,4hrs,"Searching Algorithms:Linear Search, Binary Search",Explain and implement sequential search and binary search. Be able to analyse the performance of these searching algorithms.
Week 7& 8,8hrs,"Trees and Tree algorithms:Binary tree applications, Tree Traversals, Binary search Trees","Understand what a tree data structure is and how they are used. Implementation of trees using a list. Implementation of trees as a recursive data structure. Develop algorithms for manipulating, trees."
Week9&10,8hrs,"Graph and Graph Algorithms: Topological sort, Minimum spanning trees,Shortest path","Explain the major graph algorithms and their analyses. Employ graphs to model engineering problems, when appropriate. Synthesize new graph algorithms and algorithms that employ graph computations as key components, and analyze them"
Week1-13,,"Project :Course projects aimed at problem solving, design, and implementation","Demonstrate a familiarity with applied algorithmic settings in real problem-solving Evaluation of Correctness, Design and Implementation, and Documentation of algorithms."
Week 14-17,,Examinations,
fib(n),,Fibonacci function,
n!,,Factorial Function,
Hanoi Tower,,Tower of Hanoi,
